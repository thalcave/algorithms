#!/usr/bin/env python

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.
"""

def even_fibo():
    """Iterative Fibonacci"""
    prev = 0
    cval = 1
    result = 0

    idx = 0
    while (1):
        prev, cval = cval, prev + cval
        idx += 1

        if cval <= 4000000:
            if not cval % 2:
                result += cval
        else:
            break

    print "idx: ",idx
    return result

def calcE():
   x = y = 1
   sum = 0
   while (sum < 4000000):
      sum += (x + y)
      x, y = x + 2 * y, 2 * x + 3 * y
   return sum

if __name__ == '__main__':
    print "even fibo: {0}".format(even_fibo())
    print "calcE: {0}".format(calcE())
